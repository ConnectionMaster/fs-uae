name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Linux_x86-64:
    runs-on: ubuntu-18.04

    steps:
#    - name: Install deb packages
#      run: sudo apt install python3-setuptools

    - name: Install pip packages
      run: |
        sudo python3 -m pip install setuptools pip
        sudo python3 -m pip install meson ninja

    - uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v2
      id: fsdeps_cache
      with:
        path: ~/.fsdeps
        key: fsdeps_${{ hashFiles('fsdeps/**/*') }}_${{ runner.os }}_v2

    - name: Build dependencies
      if: steps.fsdeps_cache.outputs.cache-hit != 'true'
      run: fsdeps/make

  macOS_x86-64:
    runs-on: macos-10.15

    steps:
    - name: Install brew packages
      run: brew install autoconf automake dos2unix meson

    - uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v2
      id: fsdeps_cache
      with:
        path: ~/.fsdeps
        key: fsdeps_${{ hashFiles('fsdeps/**/*') }}_${{ runner.os }}_v2

    - name: Build dependencies
      if: steps.fsdeps_cache.outputs.cache-hit != 'true'
      run: fsdeps/make

    - name: Bootstrap
      run: fsdeps/use fsbuild/bootstrap

    - name: Configure
      run: fsdeps/use fsbuild/configure

    - name: Make
      run: fsdeps/use fsbuild/make

    - name: Bundle
      run: fsbuild/bundle

    - name: Import signing certificate into keychain
      run: |
        echo $SIGNING_CERTIFICATE_P12_DATA | base64 --decode > certificate.p12
        security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
        security import certificate.p12 -k build.keychain -P $SIGNING_CERTIFICATE_PASSWORD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD build.keychain
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.MACOS_CERTIFICATE_P12_DATA }}
        SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}

    - name: Sign
      run: fsbuild/sign

    - name: Notarize
      run: fsbuild/notarize
      env:
        NOTARIZATION_PASSWORD: ${{ secrets.MACOS_NOTARIZATION_PASSWORD }}
        NOTARIZATION_PROVIDER: ${{ secrets.MACOS_NOTARIZATION_PROVIDER }}
        NOTARIZATION_USERNAME: ${{ secrets.MACOS_NOTARIZATION_USERNAME }}

  Windows_x86-64:
    runs-on: windows-2016

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          autoconf
          automake
          base-devel
          gettext
          libtool
          make
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-pkg-config
          zip
          git

    - uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v2
      id: fsdeps_cache
      with:
        path: ~/.fsdeps
        key: fsdeps_${{ hashFiles('fsdeps/**/*') }}_${{ runner.os }}_v2

    - name: Build dependencies
      if: steps.fsdeps_cache.outputs.cache-hit != 'true'
      run: fsdeps/make
